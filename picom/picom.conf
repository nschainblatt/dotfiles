#Backend
backend = "glx";

# Enable vsync to avoid screen tearing
vsync = false;

# Shadow
shadow = true;
shadow-radius = 12;
shadow-opacity = 0.7;
shadow-offset-x = -12;
shadow-offset-y = -12;
shadow-exclude = [
    "name = 'Notification'",
    "class_g = 'i3-frame'",
    "class_g = 'i3bar'",
    "_GTK_FRAME_EXTENTS@:c"
];

# Fading
# fading = true;
fade-in-step = 0.03;
fade-out-step = 0.03;
fade-delta = 10;

# Transparency
# inactive-opacity = 0.80;
# active-opacity = 1.0;
# frame-opacity = 0.7;
# inactive-opacity-override = true;
# opacity-rule = [
#     "70:class_g = 'Alacritty'"
# ];

# # Blur
# blur-background = false;
# blur-method = "dual_kawase";
# blur-strength = 7;
# blur-background-fixed = true;
# blur-kern = "3x3box";
#
# Corner Rounding
# corner-radius = 50;
# rounded-corners-exclude = [
#     "class_g = 'dmenu'",
#     "class_g = 'Polybar'"
# ];

# Experimental Backends
use-damage = true;

# Other
detect-client-opacity = true;

#################################
#          Grayscale            #
#################################
experimental-backends = true;

# Custom shader for grayscale
glx-shader = "
uniform sampler2D tex;
uniform float opacity;
void main() {
    vec4 c = texture2D(tex, gl_TexCoord[0].xy);
    float y = dot(c.rgb, vec3(0.2126, 0.7152, 0.0722));
    gl_FragColor = opacity * vec4(y, y, y, c.a);
}";
